// resuable buttons => need to modularize then import them?
  // cancel button, save button
// consider modularizing in general
// theme for tailwind => decide on colors, text, font, etc

// centralize errors on FE, for example when a repinse could be empty/und?
// possibly on BE too => cover all async func's and actions

// look into build problems

// error boundaries in React to handle errors in UI components


// lazy loading for not having to fetch ALL exercise whe nthe user loads in just some
// debouncing for only searching when the suer is done typing => delay of a second maybe after the user is done typing, then search
// caching recent user entered exercise => could just be the last XXX amount of exercises entered into teh db for that user
// 

// bug - selected date when calendar modal is open is the color of the bg
  // also consider styling on this in general
  // maybe a drag and drop into a trash can 
  // make buttons smaller?

// spacing between end of screen and workouts, between exercises, and button positioning

// show the 10 names, then user clicks 'see more', send query to backend again with offset increased
// instructions for workouts??

// slow load when new account is made?

// slow load on first user request to API for a new workout?

// columns for reps and columns on sets areent aligned
  // line them up based on the verticality? so might need new state for each one 


// logger => Winston, Bunyan, or external services like Loggly, Splunk, or ELK stack (Elasticsearch, Logstash, Kibana).


// validate types here and on other functions/controllers?

// initial load time slow => prob wont matter

// depricate success and youtube comp?

// command used in terminal to generate a token - openssl rand -hex 32

// login/signup fields shoudl have something no blanks

// Zustand's state is not persistent across page reloads or closing the browser.

// consider https options when deploying => free on heroku

// check total number of packages => build time, update time etc ...

// slow login intially, slower 
  // add console logs every where to check what part from clicking button => backend => naigate to workouts; takes longest

// when the page is refreshed, likle while in 'workouts' the app goes back to login